import io.supertokens.javalin;
import io.supertokens.javalin.core.exception.SuperTokensException;

Javalin app = Javalin.create().start(7000);

app.post("/login", ctx -> {
    String userId = "user1";
    JsonObject jwtPayload;
    JsonObject sessionData;
    SuperTokens.newSession(ctx,
        userId).withJWTPayload(jwtPayload).withSessionData(sessionData).create();
});


app.before("/user/info", SuperTokens.middleware());
app.get("/user/info", ctx -> {
    Session session = SuperTokens.getFromContext(ctx);
    String userId = session.getUserId();
    ctx.result(userId);
});


app.before("/refresh", SuperTokens.middleware());
app.post("/refresh", ctx -> {
    ctx.result("");
});

app.before("/logout", SuperTokens.middleware());
app.post("/logout", ctx -> {
    Session session = SuperTokens.getFromContext(ctx);
    session.revokeSession();
    ctx.result("");
});

app.exception(SuperTokensException.class, SuperTokens.exceptionHandler());

//////////////////

SuperTokens.middleware(boolean) -> anticsrf true / false

SuperTokens.config("localhost:3567;192.168.2.4:9000");

SuperTokens.exceptionHandler()
    .onUnauthorisedError((UnauthorisedException e, Context ctx) -> {})
    .onTryRefreshTokenError((TryRefreshToken e, Context ctx) -> {})
    .onTokenTheftDetectedError((TokenTheftDetectedException e, Context ctx) -> {});
    .onGeneralError((GeneralException e, Context ctx) -> {})
